// Generated from Navi.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,27,234,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
6,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,
13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,
19,1,19,1,19,3,19,121,8,19,1,19,1,19,3,19,125,8,19,1,19,1,19,3,19,129,8,
19,1,19,1,19,1,20,3,20,134,8,20,1,20,1,20,1,20,1,20,3,20,140,8,20,1,21,3,
21,143,8,21,1,21,1,21,1,21,4,21,148,8,21,11,21,12,21,149,3,21,152,8,21,1,
21,1,21,3,21,156,8,21,1,21,3,21,159,8,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
21,1,21,1,21,1,21,3,21,171,8,21,1,22,1,22,1,22,1,22,5,22,177,8,22,10,22,
12,22,180,9,22,1,22,1,22,1,23,1,23,1,23,5,23,187,8,23,10,23,12,23,190,9,
23,3,23,192,8,23,1,24,1,24,1,25,1,25,5,25,198,8,25,10,25,12,25,201,9,25,
1,26,4,26,204,8,26,11,26,12,26,205,1,26,1,26,1,27,1,27,1,27,1,27,5,27,214,
8,27,10,27,12,27,217,9,27,1,27,1,27,1,28,1,28,1,28,1,28,5,28,225,8,28,10,
28,12,28,228,9,28,1,28,1,28,1,28,1,28,1,28,1,226,0,29,1,1,3,2,5,3,7,4,9,
5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
18,37,19,39,20,41,21,43,22,45,23,47,0,49,0,51,24,53,25,55,26,57,27,1,0,10,
1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,3,0,0,31,34,34,92,92,2,0,10,
10,13,13,1,0,49,57,3,0,48,57,65,70,97,102,2,0,65,90,97,122,4,0,48,57,65,
90,95,95,97,122,3,0,9,10,13,13,32,32,252,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
55,1,0,0,0,0,57,1,0,0,0,1,59,1,0,0,0,3,61,1,0,0,0,5,63,1,0,0,0,7,65,1,0,
0,0,9,67,1,0,0,0,11,69,1,0,0,0,13,71,1,0,0,0,15,73,1,0,0,0,17,76,1,0,0,0,
19,78,1,0,0,0,21,80,1,0,0,0,23,82,1,0,0,0,25,84,1,0,0,0,27,87,1,0,0,0,29,
91,1,0,0,0,31,95,1,0,0,0,33,101,1,0,0,0,35,108,1,0,0,0,37,113,1,0,0,0,39,
115,1,0,0,0,41,133,1,0,0,0,43,170,1,0,0,0,45,172,1,0,0,0,47,191,1,0,0,0,
49,193,1,0,0,0,51,195,1,0,0,0,53,203,1,0,0,0,55,209,1,0,0,0,57,220,1,0,0,
0,59,60,5,59,0,0,60,2,1,0,0,0,61,62,5,61,0,0,62,4,1,0,0,0,63,64,5,123,0,
0,64,6,1,0,0,0,65,66,5,44,0,0,66,8,1,0,0,0,67,68,5,125,0,0,68,10,1,0,0,0,
69,70,5,40,0,0,70,12,1,0,0,0,71,72,5,41,0,0,72,14,1,0,0,0,73,74,5,61,0,0,
74,75,5,62,0,0,75,16,1,0,0,0,76,77,5,46,0,0,77,18,1,0,0,0,78,79,5,38,0,0,
79,20,1,0,0,0,80,81,5,124,0,0,81,22,1,0,0,0,82,83,5,58,0,0,83,24,1,0,0,0,
84,85,5,97,0,0,85,86,5,115,0,0,86,26,1,0,0,0,87,88,5,100,0,0,88,89,5,101,
0,0,89,90,5,102,0,0,90,28,1,0,0,0,91,92,5,108,0,0,92,93,5,101,0,0,93,94,
5,116,0,0,94,30,1,0,0,0,95,96,5,109,0,0,96,97,5,97,0,0,97,98,5,116,0,0,98,
99,5,99,0,0,99,100,5,104,0,0,100,32,1,0,0,0,101,102,5,115,0,0,102,103,5,
116,0,0,103,104,5,114,0,0,104,105,5,117,0,0,105,106,5,99,0,0,106,107,5,116,
0,0,107,34,1,0,0,0,108,109,5,101,0,0,109,110,5,110,0,0,110,111,5,117,0,0,
111,112,5,109,0,0,112,36,1,0,0,0,113,114,5,95,0,0,114,38,1,0,0,0,115,116,
5,105,0,0,116,117,5,110,0,0,117,118,5,116,0,0,118,120,1,0,0,0,119,121,3,
53,26,0,120,119,1,0,0,0,120,121,1,0,0,0,121,122,1,0,0,0,122,124,5,40,0,0,
123,125,3,53,26,0,124,123,1,0,0,0,124,125,1,0,0,0,125,126,1,0,0,0,126,128,
3,41,20,0,127,129,3,53,26,0,128,127,1,0,0,0,128,129,1,0,0,0,129,130,1,0,
0,0,130,131,5,41,0,0,131,40,1,0,0,0,132,134,3,43,21,0,133,132,1,0,0,0,133,
134,1,0,0,0,134,135,1,0,0,0,135,136,5,46,0,0,136,137,5,46,0,0,137,139,1,
0,0,0,138,140,3,43,21,0,139,138,1,0,0,0,139,140,1,0,0,0,140,42,1,0,0,0,141,
143,5,45,0,0,142,141,1,0,0,0,142,143,1,0,0,0,143,144,1,0,0,0,144,151,3,47,
23,0,145,147,5,46,0,0,146,148,7,0,0,0,147,146,1,0,0,0,148,149,1,0,0,0,149,
147,1,0,0,0,149,150,1,0,0,0,150,152,1,0,0,0,151,145,1,0,0,0,151,152,1,0,
0,0,152,158,1,0,0,0,153,155,7,1,0,0,154,156,7,2,0,0,155,154,1,0,0,0,155,
156,1,0,0,0,156,157,1,0,0,0,157,159,3,47,23,0,158,153,1,0,0,0,158,159,1,
0,0,0,159,171,1,0,0,0,160,161,5,105,0,0,161,162,5,110,0,0,162,171,5,102,
0,0,163,164,5,45,0,0,164,165,5,105,0,0,165,166,5,110,0,0,166,171,5,102,0,
0,167,168,5,110,0,0,168,169,5,97,0,0,169,171,5,110,0,0,170,142,1,0,0,0,170,
160,1,0,0,0,170,163,1,0,0,0,170,167,1,0,0,0,171,44,1,0,0,0,172,178,5,34,
0,0,173,177,8,3,0,0,174,175,5,92,0,0,175,177,8,4,0,0,176,173,1,0,0,0,176,
174,1,0,0,0,177,180,1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,181,1,0,
0,0,180,178,1,0,0,0,181,182,5,34,0,0,182,46,1,0,0,0,183,192,5,48,0,0,184,
188,7,5,0,0,185,187,7,0,0,0,186,185,1,0,0,0,187,190,1,0,0,0,188,186,1,0,
0,0,188,189,1,0,0,0,189,192,1,0,0,0,190,188,1,0,0,0,191,183,1,0,0,0,191,
184,1,0,0,0,192,48,1,0,0,0,193,194,7,6,0,0,194,50,1,0,0,0,195,199,7,7,0,
0,196,198,7,8,0,0,197,196,1,0,0,0,198,201,1,0,0,0,199,197,1,0,0,0,199,200,
1,0,0,0,200,52,1,0,0,0,201,199,1,0,0,0,202,204,7,9,0,0,203,202,1,0,0,0,204,
205,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,207,1,0,0,0,207,208,6,26,
0,0,208,54,1,0,0,0,209,210,5,47,0,0,210,211,5,47,0,0,211,215,1,0,0,0,212,
214,8,4,0,0,213,212,1,0,0,0,214,217,1,0,0,0,215,213,1,0,0,0,215,216,1,0,
0,0,216,218,1,0,0,0,217,215,1,0,0,0,218,219,6,27,0,0,219,56,1,0,0,0,220,
221,5,47,0,0,221,222,5,42,0,0,222,226,1,0,0,0,223,225,9,0,0,0,224,223,1,
0,0,0,225,228,1,0,0,0,226,227,1,0,0,0,226,224,1,0,0,0,227,229,1,0,0,0,228,
226,1,0,0,0,229,230,5,42,0,0,230,231,5,47,0,0,231,232,1,0,0,0,232,233,6,
28,0,0,233,58,1,0,0,0,20,0,120,124,128,133,139,142,149,151,155,158,170,176,
178,188,191,199,205,215,226,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class NaviLexer extends antlr4.Lexer {

    static grammarFileName = "Navi.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'='", "'{'", "','", "'}'", "'('", 
                         "')'", "'=>'", "'.'", "'&'", "'|'", "':'", "'as'", 
                         "'def'", "'let'", "'match'", "'struct'", "'enum'", 
                         "'_'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "As", "Def", "Let", 
                          "Match", "Struct", "Enum", "Discard", "IntInterval", 
                          "Interval", "Number", "String", "Identifier", 
                          "Space", "LineComment", "BlockComment" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "As", "Def", 
                      "Let", "Match", "Struct", "Enum", "Discard", "IntInterval", 
                      "Interval", "Number", "String", "DIGITS", "HEX", "Identifier", 
                      "Space", "LineComment", "BlockComment" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

NaviLexer.EOF = antlr4.Token.EOF;
NaviLexer.T__0 = 1;
NaviLexer.T__1 = 2;
NaviLexer.T__2 = 3;
NaviLexer.T__3 = 4;
NaviLexer.T__4 = 5;
NaviLexer.T__5 = 6;
NaviLexer.T__6 = 7;
NaviLexer.T__7 = 8;
NaviLexer.T__8 = 9;
NaviLexer.T__9 = 10;
NaviLexer.T__10 = 11;
NaviLexer.T__11 = 12;
NaviLexer.As = 13;
NaviLexer.Def = 14;
NaviLexer.Let = 15;
NaviLexer.Match = 16;
NaviLexer.Struct = 17;
NaviLexer.Enum = 18;
NaviLexer.Discard = 19;
NaviLexer.IntInterval = 20;
NaviLexer.Interval = 21;
NaviLexer.Number = 22;
NaviLexer.String = 23;
NaviLexer.Identifier = 24;
NaviLexer.Space = 25;
NaviLexer.LineComment = 26;
NaviLexer.BlockComment = 27;



