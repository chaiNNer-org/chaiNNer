// Generated from .\antlr4\Navi.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,33,260,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,
1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,
14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,
20,1,20,1,20,3,20,136,8,20,1,20,1,20,3,20,140,8,20,1,20,1,20,3,20,144,8,
20,1,20,1,20,1,21,3,21,149,8,21,1,21,1,21,1,21,1,21,3,21,155,8,21,1,22,3,
22,158,8,22,1,22,1,22,1,22,4,22,163,8,22,11,22,12,22,164,3,22,167,8,22,1,
22,1,22,3,22,171,8,22,1,22,3,22,174,8,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
22,1,22,1,22,1,22,3,22,186,8,22,1,23,1,23,1,23,1,23,5,23,192,8,23,10,23,
12,23,195,9,23,1,23,1,23,1,24,1,24,1,24,5,24,202,8,24,10,24,12,24,205,9,
24,3,24,207,8,24,1,25,1,25,1,26,1,26,5,26,213,8,26,10,26,12,26,216,9,26,
1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,32,4,32,230,8,32,
11,32,12,32,231,1,32,1,32,1,33,1,33,1,33,1,33,5,33,240,8,33,10,33,12,33,
243,9,33,1,33,1,33,1,34,1,34,1,34,1,34,5,34,251,8,34,10,34,12,34,254,9,34,
1,34,1,34,1,34,1,34,1,34,1,252,0,35,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,0,51,0,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,
32,69,33,1,0,10,1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,3,0,0,31,34,
34,92,92,2,0,10,10,13,13,1,0,49,57,3,0,48,57,65,70,97,102,2,0,65,90,97,122,
4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,278,0,1,1,0,0,0,0,3,1,
0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,1,0,0,0,3,73,1,0,0,0,5,75,
1,0,0,0,7,77,1,0,0,0,9,79,1,0,0,0,11,81,1,0,0,0,13,83,1,0,0,0,15,85,1,0,
0,0,17,88,1,0,0,0,19,90,1,0,0,0,21,92,1,0,0,0,23,94,1,0,0,0,25,96,1,0,0,
0,27,99,1,0,0,0,29,102,1,0,0,0,31,106,1,0,0,0,33,110,1,0,0,0,35,116,1,0,
0,0,37,123,1,0,0,0,39,128,1,0,0,0,41,130,1,0,0,0,43,148,1,0,0,0,45,185,1,
0,0,0,47,187,1,0,0,0,49,206,1,0,0,0,51,208,1,0,0,0,53,210,1,0,0,0,55,217,
1,0,0,0,57,219,1,0,0,0,59,221,1,0,0,0,61,224,1,0,0,0,63,226,1,0,0,0,65,229,
1,0,0,0,67,235,1,0,0,0,69,246,1,0,0,0,71,72,5,59,0,0,72,2,1,0,0,0,73,74,
5,61,0,0,74,4,1,0,0,0,75,76,5,123,0,0,76,6,1,0,0,0,77,78,5,44,0,0,78,8,1,
0,0,0,79,80,5,125,0,0,80,10,1,0,0,0,81,82,5,40,0,0,82,12,1,0,0,0,83,84,5,
41,0,0,84,14,1,0,0,0,85,86,5,61,0,0,86,87,5,62,0,0,87,16,1,0,0,0,88,89,5,
46,0,0,89,18,1,0,0,0,90,91,5,38,0,0,91,20,1,0,0,0,92,93,5,124,0,0,93,22,
1,0,0,0,94,95,5,58,0,0,95,24,1,0,0,0,96,97,5,58,0,0,97,98,5,58,0,0,98,26,
1,0,0,0,99,100,5,97,0,0,100,101,5,115,0,0,101,28,1,0,0,0,102,103,5,100,0,
0,103,104,5,101,0,0,104,105,5,102,0,0,105,30,1,0,0,0,106,107,5,108,0,0,107,
108,5,101,0,0,108,109,5,116,0,0,109,32,1,0,0,0,110,111,5,109,0,0,111,112,
5,97,0,0,112,113,5,116,0,0,113,114,5,99,0,0,114,115,5,104,0,0,115,34,1,0,
0,0,116,117,5,115,0,0,117,118,5,116,0,0,118,119,5,114,0,0,119,120,5,117,
0,0,120,121,5,99,0,0,121,122,5,116,0,0,122,36,1,0,0,0,123,124,5,101,0,0,
124,125,5,110,0,0,125,126,5,117,0,0,126,127,5,109,0,0,127,38,1,0,0,0,128,
129,5,95,0,0,129,40,1,0,0,0,130,131,5,105,0,0,131,132,5,110,0,0,132,133,
5,116,0,0,133,135,1,0,0,0,134,136,3,65,32,0,135,134,1,0,0,0,135,136,1,0,
0,0,136,137,1,0,0,0,137,139,5,40,0,0,138,140,3,65,32,0,139,138,1,0,0,0,139,
140,1,0,0,0,140,141,1,0,0,0,141,143,3,43,21,0,142,144,3,65,32,0,143,142,
1,0,0,0,143,144,1,0,0,0,144,145,1,0,0,0,145,146,5,41,0,0,146,42,1,0,0,0,
147,149,3,45,22,0,148,147,1,0,0,0,148,149,1,0,0,0,149,150,1,0,0,0,150,151,
5,46,0,0,151,152,5,46,0,0,152,154,1,0,0,0,153,155,3,45,22,0,154,153,1,0,
0,0,154,155,1,0,0,0,155,44,1,0,0,0,156,158,5,45,0,0,157,156,1,0,0,0,157,
158,1,0,0,0,158,159,1,0,0,0,159,166,3,49,24,0,160,162,5,46,0,0,161,163,7,
0,0,0,162,161,1,0,0,0,163,164,1,0,0,0,164,162,1,0,0,0,164,165,1,0,0,0,165,
167,1,0,0,0,166,160,1,0,0,0,166,167,1,0,0,0,167,173,1,0,0,0,168,170,7,1,
0,0,169,171,7,2,0,0,170,169,1,0,0,0,170,171,1,0,0,0,171,172,1,0,0,0,172,
174,3,49,24,0,173,168,1,0,0,0,173,174,1,0,0,0,174,186,1,0,0,0,175,176,5,
105,0,0,176,177,5,110,0,0,177,186,5,102,0,0,178,179,5,45,0,0,179,180,5,105,
0,0,180,181,5,110,0,0,181,186,5,102,0,0,182,183,5,110,0,0,183,184,5,97,0,
0,184,186,5,110,0,0,185,157,1,0,0,0,185,175,1,0,0,0,185,178,1,0,0,0,185,
182,1,0,0,0,186,46,1,0,0,0,187,193,5,34,0,0,188,192,8,3,0,0,189,190,5,92,
0,0,190,192,8,4,0,0,191,188,1,0,0,0,191,189,1,0,0,0,192,195,1,0,0,0,193,
191,1,0,0,0,193,194,1,0,0,0,194,196,1,0,0,0,195,193,1,0,0,0,196,197,5,34,
0,0,197,48,1,0,0,0,198,207,5,48,0,0,199,203,7,5,0,0,200,202,7,0,0,0,201,
200,1,0,0,0,202,205,1,0,0,0,203,201,1,0,0,0,203,204,1,0,0,0,204,207,1,0,
0,0,205,203,1,0,0,0,206,198,1,0,0,0,206,199,1,0,0,0,207,50,1,0,0,0,208,209,
7,6,0,0,209,52,1,0,0,0,210,214,7,7,0,0,211,213,7,8,0,0,212,211,1,0,0,0,213,
216,1,0,0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,54,1,0,0,0,216,214,1,0,0,
0,217,218,5,45,0,0,218,56,1,0,0,0,219,220,5,43,0,0,220,58,1,0,0,0,221,222,
5,42,0,0,222,223,5,42,0,0,223,60,1,0,0,0,224,225,5,42,0,0,225,62,1,0,0,0,
226,227,5,47,0,0,227,64,1,0,0,0,228,230,7,9,0,0,229,228,1,0,0,0,230,231,
1,0,0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,6,32,0,0,
234,66,1,0,0,0,235,236,5,47,0,0,236,237,5,47,0,0,237,241,1,0,0,0,238,240,
8,4,0,0,239,238,1,0,0,0,240,243,1,0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,
242,244,1,0,0,0,243,241,1,0,0,0,244,245,6,33,0,0,245,68,1,0,0,0,246,247,
5,47,0,0,247,248,5,42,0,0,248,252,1,0,0,0,249,251,9,0,0,0,250,249,1,0,0,
0,251,254,1,0,0,0,252,253,1,0,0,0,252,250,1,0,0,0,253,255,1,0,0,0,254,252,
1,0,0,0,255,256,5,42,0,0,256,257,5,47,0,0,257,258,1,0,0,0,258,259,6,34,0,
0,259,70,1,0,0,0,20,0,135,139,143,148,154,157,164,166,170,173,185,191,193,
203,206,214,231,241,252,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class NaviLexer extends antlr4.Lexer {

    static grammarFileName = "Navi.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'='", "'{'", "','", "'}'", "'('", 
                         "')'", "'=>'", "'.'", "'&'", "'|'", "':'", "'::'", 
                         "'as'", "'def'", "'let'", "'match'", "'struct'", 
                         "'enum'", "'_'", null, null, null, null, null, 
                         "'-'", "'+'", "'**'", "'*'", "'/'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "As", "Def", 
                          "Let", "Match", "Struct", "Enum", "Discard", "IntInterval", 
                          "Interval", "Number", "String", "Identifier", 
                          "OpMinus", "OpPlus", "OpPow", "OpMult", "OpDiv", 
                          "Space", "LineComment", "BlockComment" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "As", "Def", "Let", "Match", "Struct", "Enum", "Discard", 
                      "IntInterval", "Interval", "Number", "String", "DIGITS", 
                      "HEX", "Identifier", "OpMinus", "OpPlus", "OpPow", 
                      "OpMult", "OpDiv", "Space", "LineComment", "BlockComment" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

NaviLexer.EOF = antlr4.Token.EOF;
NaviLexer.T__0 = 1;
NaviLexer.T__1 = 2;
NaviLexer.T__2 = 3;
NaviLexer.T__3 = 4;
NaviLexer.T__4 = 5;
NaviLexer.T__5 = 6;
NaviLexer.T__6 = 7;
NaviLexer.T__7 = 8;
NaviLexer.T__8 = 9;
NaviLexer.T__9 = 10;
NaviLexer.T__10 = 11;
NaviLexer.T__11 = 12;
NaviLexer.T__12 = 13;
NaviLexer.As = 14;
NaviLexer.Def = 15;
NaviLexer.Let = 16;
NaviLexer.Match = 17;
NaviLexer.Struct = 18;
NaviLexer.Enum = 19;
NaviLexer.Discard = 20;
NaviLexer.IntInterval = 21;
NaviLexer.Interval = 22;
NaviLexer.Number = 23;
NaviLexer.String = 24;
NaviLexer.Identifier = 25;
NaviLexer.OpMinus = 26;
NaviLexer.OpPlus = 27;
NaviLexer.OpPow = 28;
NaviLexer.OpMult = 29;
NaviLexer.OpDiv = 30;
NaviLexer.Space = 31;
NaviLexer.LineComment = 32;
NaviLexer.BlockComment = 33;



